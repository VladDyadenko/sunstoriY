{"version":3,"file":"static/js/999.21766aaa.chunk.js","mappings":"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","sources":["assets/constants/transformation.js","components/ChoseLessonData/ScheduleCard/ScheduleCard.styled.js","components/ContainerMain/ContainerMain.styled.js","redux/offices/officesSelector.js","ui/FreeTableItem/FreeTableItem.styled.js","ui/FreeTableItem/FreeTableItem.jsx","ui/LessonTableCard/LessonTableCard.styled.js","ui/LessonTableCard/LessonTableCard.jsx","ui/TimeLessons/TimeLessons.stayled.js","ui/TimeLessons/TimeLessons.jsx","ui/MainTable/MainTable.styled.js","ui/MainTable/MainTable.jsx"],"sourcesContent":["import dayjs from 'dayjs';\nimport 'dayjs/locale/uk';\n\ndayjs.locale('uk');\n\nexport const formatTimeRange = time => {\n  const start = dayjs(time[0]).format('HH:mm');\n  const end = dayjs(time[1]).format('HH:mm');\n  return `${start} - ${end}`;\n};\n\nexport const formatDateRange = date => {\n  const currentDate = dayjs(date).format('DD-MM-YYYY');\n\n  return `${currentDate}`;\n};\n\nexport const formatDay = date => {\n  const dayOfWeek = dayjs(date).format('dddd');\n  return `${dayOfWeek}`;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { TbEyeCheck } from 'react-icons/tb';\nimport { AiFillEdit } from 'react-icons/ai';\n\nexport const CardWrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  flex-direction: column;\n  min-width: 90px;\n  padding: 5px;\n\n  ${props => {\n    const { 'aria-current': ariaCurrent } = props;\n    return `\n    border:2px solid ${ariaCurrent};\n    border-radius:8px;\n    color:${ariaCurrent};\n   \n  `;\n  }}\n`;\nexport const CardDescr = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n`;\nexport const CardDescrChild = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n  color: var(--main-text-black);\n`;\nexport const CardLink = styled(NavLink)`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 3px;\n  right: -13px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: var(--main-dark-blue-bg);\n  cursor: pointer;\n\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    background-color: var(--main-dark-blue);\n  }\n`;\nexport const IconLessonSee = styled(TbEyeCheck)`\n  width: 17px;\n  height: 17px;\n  stroke: var(--header-main-color);\n`;\nexport const ButtonLessonDelete = styled(Button)`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 71px;\n  right: -13px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: #fa4a3b;\n  cursor: pointer;\n\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    background-color: #da292b;\n  }\n`;\nexport const IconLessonDelete = styled(AiOutlineDelete)`\n  width: 17px;\n  height: 17px;\n  fill: var(--header-main-color);\n`;\nexport const ButtonLessonEdit = styled(NavLink)`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 37px;\n  right: -13px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border-radius: 50%;\n  background-color: var(--bg-main-color);\n  cursor: pointer;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    background-color: var(--main-green);\n    border: none;\n  }\n`;\nexport const IconLessonEdit = styled(AiFillEdit)`\n  width: 17px;\n  height: 17px;\n  fill: var(--header-main-color);\n`;\n","import styled from 'styled-components';\n\nexport const MainWrapper = styled.div`\n  width: 100%;\n  padding: 5px 5px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: start;\n  gap: 10px;\n`;\n","export const selectLessonsSensornaya = state => state.offices.lessonsSensornaya;\nexport const selectLessonsСorrection = state => state.offices.lessonsСorrection;\nexport const selectLessonsPreschool = state => state.offices.lessonsPreschool;\nexport const selectLessonsPreschoolInclusion = state =>\n  state.offices.preschoolInclusion;\nexport const selectLessonsLogoped = state => state.offices.lessonsLogoped;\nexport const selectOfficesOperetion = state => state.offices.operetion;\n","import styled from 'styled-components';\nimport { BsPlusCircleDotted } from 'react-icons/bs';\n\nexport const Wrapper = styled.div`\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  cursor: pointer;\n  height: 80px;\n  width: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  border: 2px solid #a9a9a9;\n  transition: cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const IconFreeCard = styled(BsPlusCircleDotted)`\n  width: 30px;\n  height: 30px;\n  fill: #a9a9a9;\n`;\n","import { IconFreeCard, Wrapper } from './FreeTableItem.styled';\n\nfunction FreeTableItem() {\n  return (\n    <Wrapper>\n      <IconFreeCard />\n    </Wrapper>\n  );\n}\n\nexport default FreeTableItem;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { BsFillPatchQuestionFill } from 'react-icons/bs';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: space-between;\n  height: 100%;\n`;\nexport const InfoColor = styled.div`\n  width: 30%;\n  height: 100%;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 5px;\n  background-color: var(--main-dark-blue);\n\n  background-color: ${props => props['aria-current'] || '#0456ba'};\n`;\nexport const ButtonContainer = styled.div`\n  width: 100%;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 5px;\n`;\nexport const InfoContainer = styled.div`\n  width: 80%;\n  padding: 5px;\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  flex-direction: column;\n\n  & p {\n    margin-bottom: 3px;\n  }\n`;\nexport const InfoTeacher = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 12px;\n  color: var(--main-dark-blue);\n`;\nexport const InfoChild = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 12px;\n  color: var(--main-green);\n`;\nexport const CardLessonLink = styled(NavLink)`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  gap: 8px;\n  border: none;\n  border-radius: 8px;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n  color: #fff;\n  background-color: var(--main-dark-blue-bg);\n  cursor: pointer;\n\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    background-color: var(--main-dark-blue);\n    color: #fff !important;\n  }\n`;\nexport const LessonEdit = styled(NavLink)`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  gap: 8px;\n  border: none;\n  border-radius: 8px;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n  color: #fff;\n  background-color: var(--main-green);\n  cursor: pointer;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    background-color: var(--bg-main-color);\n    border: none;\n    color: #fff !important;\n  }\n`;\nexport const LessonDelete = styled(Button)`\n  width: 100%;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 5px;\n  gap: 8px;\n  border: none;\n  border-radius: 8px;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n  color: #fff;\n  border: none;\n  background-color: #fa4a3b;\n  cursor: pointer;\n\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    background-color: #da292b;\n    color: #fff !important;\n  }\n`;\n\nexport const DescrDeleteBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n`;\nexport const LessonButton = styled(Button)`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  cursor: pointer;\n  background-color: #fff;\n\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  /* &:hover {\n    background-color: #fff !important;\n  } */\n`;\nexport const IconButtonChose = styled(BsFillPatchQuestionFill)`\n  width: 28px;\n  height: 28px;\n  fill: var(--main-dark-blue);\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    fill: #fff;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { Popconfirm } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport { Popover } from 'antd';\nimport {\n  IconLessonDelete,\n  IconLessonEdit,\n  IconLessonSee,\n} from 'components/ChoseLessonData/ScheduleCard/ScheduleCard.styled';\nimport {\n  ButtonContainer,\n  CardLessonLink,\n  DescrDeleteBtn,\n  IconButtonChose,\n  InfoChild,\n  InfoColor,\n  InfoContainer,\n  InfoTeacher,\n  LessonButton,\n  LessonDelete,\n  LessonEdit,\n  Wrapper,\n} from './LessonTableCard.styled';\nimport { selectOfficesOperetion } from 'redux/offices/officesSelector';\n\nfunction LessonTableCard({ lesson, onLessonsDelete }) {\n  const operetion = useSelector(selectOfficesOperetion);\n\n  const content = (\n    <ButtonContainer>\n      <CardLessonLink to={`/lesson/${lesson._id}?source=buttonViewing`}>\n        Переглянути\n        <IconLessonSee />\n      </CardLessonLink>\n      <LessonEdit to={`/lesson/${lesson._id}`}>\n        Редагувати\n        <IconLessonEdit />\n      </LessonEdit>\n      <Popconfirm\n        title=\"Видалити заняття\"\n        description=\"Ви впевнені, що хочете видалити заняття?\"\n        icon={\n          <QuestionCircleOutlined\n            style={{\n              color: 'red',\n            }}\n          />\n        }\n        onConfirm={() => {\n          onLessonsDelete(lesson);\n        }}\n      >\n        <LessonDelete>\n          {operetion === lesson._id ? (\n            <CirclesWithBar\n              height=\"24\"\n              width=\"24\"\n              color=\"#ffffff\"\n              wrapperStyle={{}}\n              visible={true}\n              ariaLabel=\"circles-with-bar-loading\"\n            />\n          ) : (\n            <DescrDeleteBtn>\n              Видалити\n              <IconLessonDelete />\n            </DescrDeleteBtn>\n          )}\n        </LessonDelete>\n      </Popconfirm>\n    </ButtonContainer>\n  );\n  return (\n    <Wrapper>\n      <InfoContainer>\n        <InfoChild>Дитина:</InfoChild>\n        <InfoChild>\n          {lesson.childName} {lesson.childSurname}\n        </InfoChild>\n        <InfoTeacher>Фахівець:</InfoTeacher>\n        <InfoTeacher>\n          {lesson.teacherName} {lesson.teacherSurname}\n        </InfoTeacher>\n      </InfoContainer>\n      <InfoColor aria-current={lesson ? lesson.teacherColor : ''}>\n        <Popover content={content} title=\"Внесіть зміни:\">\n          <LessonButton type=\"primary\">\n            <IconButtonChose />\n          </LessonButton>\n        </Popover>\n      </InfoColor>\n    </Wrapper>\n  );\n}\n\nexport default LessonTableCard;\n","import styled from 'styled-components';\nimport { BsPlusCircleDotted } from 'react-icons/bs';\n\nexport const TimeContainer = styled.ul`\n  width: 50px;\n  display: block;\n  padding: 0 5px;\n  margin-right: 10px;\n  @media screen and (min-width: 375.1px) {\n    display: block;\n  }\n`;\nexport const TableItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  border-radius: 8px;\n  min-width: 50px;\n  height: 80px;\n  margin-bottom: 10px;\n\n  background-color: var(--main-blue);\n  color: var(--main-green);\n  border: 2px solid var(--main-green);\n`;\nexport const TableItemDefault = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 8px;\n  background-color: var(--main-blue);\n  border: 2px solid var(--main-green);\n  height: 70px;\n  min-width: 50px;\n  margin-bottom: 10px;\n`;\nexport const TimeItem = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 900;\n  font-size: 14px;\n  width: 100%;\n  padding: 5px;\n`;\nexport const AddLessonLink = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: var(--main-blue);\n  border: 2px solid var(--main-green);\n  height: 70px;\n  min-width: 50px;\n  margin-bottom: 10px;\n`;\nexport const IconAddLessonLink = styled(BsPlusCircleDotted)`\n  width: 30px;\n  height: 30px;\n  fill: #a9a9a9;\n  transition: cubic-bezier(0.4, 0, 0.2, 1) 100ms;\n\n  &:hover {\n    fill: var(--main-dark-blue);\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { formatTimeRange } from 'assets/constants/transformation';\nimport {\n  AddLessonLink,\n  IconAddLessonLink,\n  TableItem,\n  TimeContainer,\n  TimeItem,\n} from './TimeLessons.stayled';\n\nfunction TimeLessons({ timeLessonOnList }) {\n  return (\n    <>\n      <TimeContainer>\n        <AddLessonLink>\n          <Link to={`/lesson`}>\n            <IconAddLessonLink />\n          </Link>\n        </AddLessonLink>\n        {timeLessonOnList?.map((time, index) => {\n          return (\n            <TableItem key={time + index}>\n              <TimeItem>{formatTimeRange(time)}</TimeItem>\n            </TableItem>\n          );\n        })}\n      </TimeContainer>\n    </>\n  );\n}\n\nexport default TimeLessons;\n","import styled from 'styled-components';\n\nexport const DayWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: start;\n  justify-content: start;\n  flex-direction: row;\n  gap: 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    flex-direction: row;\n    align-items: center;\n  }\n`;\nexport const LessonsWrapper = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  padding: 0 10px;\n`;\nexport const MainTableContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: start;\n  justify-content: center;\n  gap: 15px;\n`;\nexport const DayDeafult = styled.div`\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  border-radius: 8px;\n  height: 70px;\n  width: 100%;\n  min-width: 200px;\n  max-width: 250px;\n  padding: 5px;\n  margin-bottom: 10px;\n  background-color: var(--main-blue);\n  border: 2px solid var(--main-green);\n`;\n\nexport const DayDeafultInfo = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 900;\n  text-align: center;\n  color: var(--main-green);\n  margin-bottom: 10px;\n`;\nexport const DayContainer = styled.div`\n  width: 100%;\n  max-width: 250px;\n  text-align: center;\n  border-radius: 8px;\n  margin-bottom: 10px;\n\n  @media screen and (min-width: 376px) {\n    min-width: 200px;\n    margin-right: 10px;\n  }\n`;\n\nexport const LessonsContainer = styled.ul``;\nexport const LessonsItem = styled.li`\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  cursor: pointer;\n  height: 80px;\n  width: 100%;\n  max-width: 250px;\n  flex-direction: column;\n  border-radius: 8px;\n  /* border: 2px solid transparent; */\n  margin-bottom: 10px;\n  transition: cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n\n  border: 2px solid ${props => props['aria-current'] || '#fff'};\n  color: ${props => props['aria-current'] || '#fff'};\n`;\n\nexport const CardInfo = styled.p`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 14px;\n  padding: 5px;\n  text-align: center;\n`;\nexport const OneTimeContainer = styled.ul`\n  padding: 0 5px;\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n`;\nexport const OneTimeItem = styled.li`\n  height: 70px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport FreeTableItem from 'ui/FreeTableItem/FreeTableItem';\nimport LessonTableCard from 'ui/LessonTableCard/LessonTableCard';\nimport TimeLessons from 'ui/TimeLessons/TimeLessons';\nimport {\n  LessonsWrapper,\n  LessonsContainer,\n  LessonsItem,\n  DayDeafult,\n  DayDeafultInfo,\n  DayWrapper,\n  DayContainer,\n  MainTableContainer,\n} from './MainTable.styled';\nimport { formatDateRange, formatDay } from 'assets/constants/transformation';\n\nfunction MainTable({ lessons, onLessonsDelete, office }) {\n  const [uniquTime, setUniquTime] = useState(null);\n  const [uniquDate, setUniquDate] = useState(null);\n\n  const [groupedLessons, setGroupedLessons] = useState(null);\n\n  const extractTimeFromISOString = dateTimeString => {\n    const timeString = new Date(dateTimeString).toLocaleTimeString('en-US', {\n      timeZone: 'UTC',\n    });\n    return timeString;\n  };\n\n  useEffect(() => {\n    if (lessons) {\n      const areTimeIntervalsEqual = (intervalA, intervalB) => {\n        const roundedIntervalA = intervalA.map(extractTimeFromISOString);\n        const roundedIntervalB = intervalB.map(extractTimeFromISOString);\n        return (\n          roundedIntervalA[0] === roundedIntervalB[0] &&\n          roundedIntervalA[1] === roundedIntervalB[1]\n        );\n      };\n\n      const uniquTimeDate = lessons\n        .map(lesson => lesson.timeLesson)\n        .filter(\n          (time, index, self) =>\n            self.findIndex(t => areTimeIntervalsEqual(t, time)) === index\n        )\n        .sort((timeA, timeB) => {\n          const timePartA = timeA[0].split('T')[1];\n          const timePartB = timeB[0].split('T')[1];\n          return timePartA.localeCompare(timePartB);\n        });\n      setUniquTime(uniquTimeDate);\n\n      const uniqueDates = [...new Set(lessons.map(val => val.dateLesson))]\n        .map(dateString => new Date(dateString))\n        .sort((a, b) => a - b)\n        .map(date => date.toISOString());\n\n      setUniquDate(uniqueDates);\n\n      const groupedLessons = uniqueDates.map(date =>\n        lessons.filter(lesson => lesson.dateLesson === date)\n      );\n      setGroupedLessons(groupedLessons);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lessons]);\n\n  return (\n    <MainTableContainer>\n      <TimeLessons timeLessonOnList={uniquTime} />\n      <LessonsWrapper>\n        <DayWrapper>\n          {uniquDate?.map((date, index) => {\n            return (\n              <DayContainer key={index}>\n                <DayDeafult>\n                  <DayDeafultInfo>{formatDateRange(date)}</DayDeafultInfo>\n                  <DayDeafultInfo>{formatDay(date)}</DayDeafultInfo>\n                </DayDeafult>\n                <LessonsContainer>\n                  {uniquTime?.map((time, timeIndex) => {\n                    const lessonsWithSameTime = groupedLessons[index].filter(\n                      day => {\n                        const lessonTimes = day.timeLesson.map(timeString => {\n                          const lessonDate = new Date(timeString);\n                          return {\n                            hours: lessonDate.getHours(),\n                            minutes: lessonDate.getMinutes(),\n                            seconds: lessonDate.getSeconds(),\n                          };\n                        });\n\n                        const targetTime = time.map(timeString => {\n                          const targetDate = new Date(timeString);\n                          return {\n                            hours: targetDate.getHours(),\n                            minutes: targetDate.getMinutes(),\n                            seconds: targetDate.getSeconds(),\n                          };\n                        });\n\n                        return lessonTimes.some(lessonTime =>\n                          targetTime.some(\n                            target =>\n                              lessonTime.hours === target.hours &&\n                              lessonTime.minutes === target.minutes &&\n                              lessonTime.seconds === target.seconds\n                          )\n                        );\n                      }\n                    );\n\n                    const lesson =\n                      lessonsWithSameTime.length > 0\n                        ? lessonsWithSameTime[0]\n                        : null;\n\n                    return (\n                      <LessonsItem\n                        aria-current={lesson ? lesson.teacherColor : ''}\n                        key={timeIndex}\n                      >\n                        {lesson ? (\n                          <LessonTableCard\n                            lesson={lesson}\n                            onLessonsDelete={onLessonsDelete}\n                          />\n                        ) : (\n                          <Link\n                            to={`/lesson?dateFreeLesson=${date}&officeFreeLesson=${office}&timeFreeLesson=${JSON.stringify(\n                              time\n                            )}`}\n                          >\n                            <FreeTableItem />\n                          </Link>\n                        )}\n                      </LessonsItem>\n                    );\n                  })}\n                </LessonsContainer>\n              </DayContainer>\n            );\n          })}\n        </DayWrapper>\n      </LessonsWrapper>\n    </MainTableContainer>\n  );\n}\n\nexport default MainTable;\n"],"names":["dayjs","formatTimeRange","time","start","format","end","concat","formatDateRange","date","currentDate","formatDay","dayOfWeek","CardWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","ariaCurrent","CardDescr","p","_templateObject2","CardDescrChild","_templateObject3","CardLink","NavLink","_templateObject4","IconLessonSee","TbEyeCheck","_templateObject5","ButtonLessonDelete","Button","_templateObject6","IconLessonDelete","AiOutlineDelete","_templateObject7","ButtonLessonEdit","_templateObject8","IconLessonEdit","AiFillEdit","_templateObject9","MainWrapper","selectLessonsSensornaya","state","offices","lessonsSensornaya","selectLessonsСorrection","lessonsСorrection","selectLessonsPreschool","lessonsPreschool","selectLessonsPreschoolInclusion","preschoolInclusion","selectLessonsLogoped","lessonsLogoped","selectOfficesOperetion","operetion","Wrapper","IconFreeCard","BsPlusCircleDotted","_jsx","children","InfoColor","ButtonContainer","InfoContainer","InfoTeacher","InfoChild","CardLessonLink","LessonEdit","LessonDelete","DescrDeleteBtn","_templateObject10","LessonButton","_templateObject11","IconButtonChose","BsFillPatchQuestionFill","_templateObject12","_ref","lesson","onLessonsDelete","useSelector","content","_jsxs","to","_id","Popconfirm","title","description","icon","QuestionCircleOutlined","style","color","onConfirm","CirclesWithBar","height","width","wrapperStyle","visible","ariaLabel","childName","childSurname","teacherName","teacherSurname","teacherColor","Popover","type","TimeContainer","ul","TableItem","li","TimeItem","AddLessonLink","IconAddLessonLink","timeLessonOnList","_Fragment","Link","map","index","DayWrapper","LessonsWrapper","MainTableContainer","DayDeafult","DayDeafultInfo","DayContainer","LessonsContainer","LessonsItem","lessons","office","_useState","useState","_useState2","_slicedToArray","uniquTime","setUniquTime","_useState3","_useState4","uniquDate","setUniquDate","_useState5","_useState6","groupedLessons","setGroupedLessons","extractTimeFromISOString","dateTimeString","Date","toLocaleTimeString","timeZone","useEffect","uniquTimeDate","timeLesson","filter","self","findIndex","t","intervalA","intervalB","roundedIntervalA","roundedIntervalB","areTimeIntervalsEqual","sort","timeA","timeB","timePartA","split","timePartB","localeCompare","uniqueDates","_toConsumableArray","Set","val","dateLesson","dateString","a","b","toISOString","TimeLessons","timeIndex","lessonsWithSameTime","day","lessonTimes","timeString","lessonDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","targetTime","targetDate","some","lessonTime","target","length","LessonTableCard","JSON","stringify","FreeTableItem"],"sourceRoot":""}