{"version":3,"file":"static/js/219.860f2e6a.chunk.js","mappings":"gPAEaA,EAA2B,CACtCC,KAAM,GACNC,QAAS,GACTC,aAAc,GACdC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,eAAgB,IAGLC,EAAsBC,EAAAA,KAAaC,MAAM,CACpDV,KAAMS,EAAAA,KAEHE,SAAS,sFACTC,IAAI,EAAG,2DACPC,IAAI,GAAI,+CACXZ,QAASQ,EAAAA,KAAaG,IAAI,EAAG,2DAAcC,IAAI,GAAI,+CACnDC,MAAOL,EAAAA,OAEIM,EAAU,CACrB,CACEC,MAAO,0LACPC,MAAO,2LAET,CACED,MAAO,mDACPC,MAAO,oDAET,CACED,MAAO,6CACPC,MAAO,8CAET,CACED,MAAO,gHACPC,MAAO,iHAET,CACED,MAAO,+IACPC,MAAO,gJAET,CACED,MAAO,+DACPC,MAAO,gEAET,CACED,MAAO,2GACPC,MAAO,6G,mBC9CEC,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kSAiB1BC,EAAkBJ,EAAAA,GAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qKAW1BI,EAAmBP,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gHAS7BO,EAAkBV,EAAAA,GAAOQ,IAAGG,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,mKAS5BS,GAAeZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAac,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kaAqB5BY,EAAYf,EAAAA,GAAOK,EAACW,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yBAGpBc,EAAgBjB,EAAAA,GAAOF,MAAKoB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,+OAa5BgB,EAAenB,EAAAA,GAAOF,MAAKsB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,6RAgB3BkB,EAAmBrB,EAAAA,GAAOQ,IAAGc,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,iIAQ7BoB,EAAcvB,EAAAA,GAAOF,MAAK0B,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,wQAc1BsB,EAAkBzB,EAAAA,GAAOQ,IAAGkB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,uMAY5BwB,GAAgB3B,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAa4B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,kZAmB7B0B,EAAa7B,EAAAA,GAAO8B,OAAMC,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,oiBAuB1B6B,EAAehC,EAAAA,GAAOQ,IAAGyB,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,yIASzB+B,GAAalC,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAamC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,mFAM1BiC,GAAoBpC,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAaqC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,sd,GAwBbH,EAAAA,GAAOF,MAAKwC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,uK,kBC3E7C,EAlHoB,WAClB,IAAAoC,GAAgDC,EAAAA,EAAAA,UAC9C5D,GACD6D,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAFMI,EAAiBF,EAAA,GAAEG,EAAkBH,EAAA,GAG5CI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7C9D,EAAY+D,EAAA,GAAEC,EAAeD,EAAA,GAEpCE,GAA0BR,EAAAA,EAAAA,UAAS,WAAUS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAtC9D,EAAK+D,EAAA,GAAEC,EAAQD,EAAA,GAEtB,OACEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLC,oBAAoB,EACpBC,cAAeb,EACfc,iBAAkBpE,EAClBqE,SAAU,SAAAC,GACRC,QAAQC,IAAIF,EAYd,EAAEN,SAED,SAAAS,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAiBC,GAAFH,EAANH,OAAqBG,EAAbG,eAAa,OACxCC,EAAAA,EAAAA,MAACnE,EAAW,CAAAsD,SAAA,EACVF,EAAAA,EAAAA,KAAC/C,EAAe,CAAAiD,SAAC,qFACjBa,EAAAA,EAAAA,MAAC3D,EAAgB,CAAA8C,SAAA,EACfF,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,CACXvB,mBAAoBA,EACpBG,gBAAiBA,EACjBqB,YAAarF,EACbsF,SAAS,eACTJ,cAAeA,KAEjBC,EAAAA,EAAAA,MAACxD,EAAe,CAAA2C,SAAA,EACdF,EAAAA,EAAAA,KAACvC,EAAY,CAAC/B,KAAK,OAAOyF,KAAK,OAAOC,YAAY,wBACjDP,EAAQnF,MAAQkF,EAAOlF,OACtBsE,EAAAA,EAAAA,KAACpC,EAAS,CAAAsC,SAAEU,EAAOlF,QAGrBsE,EAAAA,EAAAA,KAACvC,EAAY,CACX/B,KAAK,UACLyF,KAAK,OACLC,YAAY,+CAEbR,EAAOjF,UAAWqE,EAAAA,EAAAA,KAACpC,EAAS,CAAAsC,SAAEU,EAAOjF,WACtCoF,EAAAA,EAAAA,MAAClC,EAAY,CAAAqB,SAAA,EACXF,EAAAA,EAAAA,KAAClC,EAAa,CAAAoC,SAAC,yGACfF,EAAAA,EAAAA,KAACjB,EAAU,CACTrD,KAAK,QACLyF,KAAK,QACLzE,MAAOX,EACPsF,SAAU,SAAAC,GACR,IAAMC,EAAgBD,EAAME,OAAO9E,MACnCqD,EAASwB,GACTT,EAAc,QAASS,EACzB,cAKRR,EAAAA,EAAAA,MAAC7C,EAAgB,CAAAgC,SAAA,EACfF,EAAAA,EAAAA,KAAChC,EAAY,CAAAkC,SAAC,iDACdF,EAAAA,EAAAA,KAACf,EAAiB,CAChBvD,KAAK,QACLyF,KAAK,MACLM,aAAa,MACbL,YAAY,0BAGhBL,EAAAA,EAAAA,MAAC7C,EAAgB,CAAAgC,SAAA,EACfF,EAAAA,EAAAA,KAAChC,EAAY,CAAAkC,SAAC,aACdF,EAAAA,EAAAA,KAACf,EAAiB,CAChBvD,KAAK,QACLyF,KAAK,QACLM,aAAa,MACbL,YAAY,4BAGhBL,EAAAA,EAAAA,MAACzC,EAAe,CAAA4B,SAAA,EACdF,EAAAA,EAAAA,KAAC5B,EAAW,CAAA8B,SAAC,qFACbF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAM,CACLC,KAAK,WACLC,MAAO,CACLC,MAAO,OACPC,SAAU,QACVC,UAAW,OACXC,OAAQ,oBACRC,aAAc,OAEhBZ,SAAU,SAAA3E,GAERoE,EAAc,iBADSpE,EAEzB,EACAD,QAASA,QAIbuD,EAAAA,EAAAA,KAAClC,EAAa,CAAAoC,SAAC,0HACfF,EAAAA,EAAAA,KAACxB,EAAa,CAAC9C,KAAK,QAAQwG,UAAU,WAAWC,KAAM,KACvDnC,EAAAA,EAAAA,KAACtB,EAAU,CAACyC,KAAK,SAAQjB,SAAC,sFACd,KAKxB,EClIA,EARoB,WAClB,OACEF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACoC,EAAW,KAGlB,C,sHCLaC,EAAuBxF,EAAAA,GAAOQ,IAAGN,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wKASjCsF,EAAmBzF,EAAAA,GAAO8B,OAAMxB,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,ggBAoBhCuF,EAAY1F,EAAAA,GAAOQ,IAAGC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sIAOtBwF,EAAe3F,EAAAA,GAAO4F,IAAGjF,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oDAIzB0F,GAAW7F,EAAAA,EAAAA,IAAO8F,EAAAA,IAAP9F,CAAmCc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,6D,SCU3D,MA5CA,SAAqB2D,GAAuC,IAApCG,EAAaH,EAAbG,cAAe8B,EAAMjC,EAANiC,OAAQ1B,EAAQP,EAARO,SACvC2B,GAAUC,EAAAA,EAAAA,QAAO,MAEvB1D,GAA8BC,EAAAA,EAAAA,UAASuD,GAAOtD,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvC2D,EAAOzD,EAAA,GAAE0D,EAAU1D,EAAA,GAI1B,OAHA2D,EAAAA,EAAAA,YAAU,WACRD,EAAWJ,EACb,GAAG,CAACA,KAEF7B,EAAAA,EAAAA,MAAAd,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAA,SACEmB,KAAK,OACL+B,QAAM,EACNC,IAAKN,EACLxB,SAAU,SAAAC,GACR,IAAM8B,EAAe9B,EAAME,OAAO6B,MAAM,GACxCvC,EAAc,GAADwC,OAAIpC,GAAYkC,GAC7B,IAAMG,EAAS,IAAIC,WACnBD,EAAOE,cAAcL,GACrBG,EAAOG,OAAS,WACdV,EAAWO,EAAOI,OACpB,CACF,KAEF5C,EAAAA,EAAAA,MAACwB,EAAS,CAAArC,SAAA,CACP6C,GACC/C,EAAAA,EAAAA,KAACwC,EAAY,CAACoB,IAAKb,EAASc,IAAI,UAAUhC,MAAO,IAAKiC,OAAQ,OAE9D9D,EAAAA,EAAAA,KAACqC,EAAoB,CAAAnC,UACnBF,EAAAA,EAAAA,KAAC0C,EAAQ,OAGb1C,EAAAA,EAAAA,KAACsC,EAAgB,CACfnB,KAAK,SACL4C,QAAS,WACPlB,EAAQmB,QAAQC,OAClB,EAAE/D,SACH,6EAMT,C","sources":["components/Teacher/Schemas/schema.js","components/Teacher/TeacherForm/TeacherForm.styled.js","components/Teacher/TeacherForm/TeacherForm.jsx","page/TeacherPage/TeacherPage.jsx","ui/UpdateAvatar/UpdateAvatar.styled.js","ui/UpdateAvatar/UpdateAvatar.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const initialValuesTeacherForm = {\n  name: '',\n  surname: '',\n  teacherImage: '',\n  phone: '',\n  email: '',\n  color: '',\n  about: '',\n  specialization: [],\n};\n\nexport const schemaTeacherUpdate = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Ім'я обов'язкове!\")\n    .min(2, 'Закоротке!')\n    .max(40, 'Задовге!'),\n  surname: yup.string().min(2, 'Закоротке!').max(40, 'Задовге!'),\n  price: yup.number(),\n});\nexport const options = [\n  {\n    value: 'Спеціаліст з сенсорної інтеграції',\n    label: 'Спеціаліст з сенсорної інтеграції',\n  },\n  {\n    value: 'Психолог',\n    label: 'Психолог',\n  },\n  {\n    value: 'Логопед',\n    label: 'Логопед',\n  },\n  {\n    value: 'Корекційний педагог',\n    label: 'Корекційний педагог',\n  },\n  {\n    value: 'Педагог початкових класів',\n    label: 'Педагог початкових класів',\n  },\n  {\n    value: 'Вихователь',\n    label: 'Вихователь',\n  },\n  {\n    value: 'Підготовка до школи',\n    label: 'Підготовка до школи',\n  },\n];\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormTeacher = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 25px 15px 40px 15px;\n  width: 375px;\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n  @media (min-width: 1280px) {\n    width: 1280px;\n  }\n  @media (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\nexport const TeacherAddTitle = styled.p`\n  width: 100%;\n  font-family: 'RobotoSlab';\n\n  font-weight: 500;\n  font-size: 24px;\n  color: var(--main-green);\n  margin: 0;\n  text-align: center;\n`;\n\nexport const FormImgContainer = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 10px;\n\n  @media (min-width: 768px) {\n    gap: 30px;\n  }\n`;\nexport const NameFormTeacher = styled.div`\n  padding: 10px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: space-between;\n  width: 100%;\n  gap: 20px;\n`;\nexport const FieldTeacher = styled(Field)`\n  width: 100%;\n  height: 40px;\n  max-width: 400px;\n\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n`;\nexport const ErrorInfo = styled.p`\n  color: red;\n`;\nexport const TextAreaTitle = styled.label`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  margin-bottom: 5px;\n  margin-top: 15px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\nexport const ContactDescr = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  min-width: 130px;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\n\nexport const ContactContainer = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  gap: 10px;\n  text-align: center;\n  justify-content: start;\n`;\nexport const SelectDescr = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\nexport const SelectContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: start;\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 10px;\n  }\n`;\n\nexport const FieldTextarea = styled(Field)`\n  width: 100%;\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n  margin-bottom: 20px;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n`;\nexport const FormButton = styled.button`\n  border-radius: 4px;\n  margin: 0 auto;\n  width: 200px;\n  background-color: var(--bg-main-color);\n  color: var(--header-main-color);\n  border-radius: 8px;\n  border: 1px solid transparent;\n  padding: 10px 10px;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,\n    border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: var(--main-green);\n    border-color: var(--header-main-color);\n  }\n`;\n\nexport const ColorWrapper = styled.div`\n  width: 100%;\n  max-width: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nexport const FieldColor = styled(Field)`\n  width: 100px;\n  border-color: var(--main-green);\n  cursor: pointer;\n`;\n\nexport const FieldTeacherPhone = styled(Field)`\n  height: 40px;\n  width: 100%;\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n\n  @media (min-width: 768px) {\n    max-width: 400px;\n    flex: 1;\n  }\n`;\nexport const TeacherPhoneTitle = styled.label`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  color: var(--main-green);\n\n  @media (min-width: 768px) {\n    width: 110px;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useState } from 'react';\nimport { Select } from 'antd';\nimport {\n  initialValuesTeacherForm,\n  options,\n  schemaTeacherUpdate,\n} from '../Schemas/schema';\nimport {\n  ColorWrapper,\n  ContactContainer,\n  ContactDescr,\n  ErrorInfo,\n  FieldColor,\n  FieldTeacher,\n  FieldTeacherPhone,\n  FieldTextarea,\n  FormButton,\n  FormImgContainer,\n  FormTeacher,\n  NameFormTeacher,\n  SelectContainer,\n  SelectDescr,\n  TeacherAddTitle,\n  TextAreaTitle,\n} from './TeacherForm.styled';\nimport UpdateAvatar from 'ui/UpdateAvatar/UpdateAvatar';\n\nconst TeacherForm = () => {\n  const [valuesTeacherForm, setValuesChildForm] = useState(\n    initialValuesTeacherForm\n  );\n  const [teacherImage, setTeacherImage] = useState('');\n\n  const [color, setColor] = useState('#0456BA');\n\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={valuesTeacherForm}\n        validationSchema={schemaTeacherUpdate}\n        onSubmit={values => {\n          console.log(values);\n          // if (child) {\n          //   const id = child._id;\n          //   const combinedData = { id, values };\n          //   dispatch(updateChild(combinedData)).then(() => {\n          //     history('/children');\n          //   });\n          // } else {\n          //   dispatch(addChild(values)).then(() => {\n          //     history('/children');\n          //   });\n          // }\n        }}\n      >\n        {({ errors, touched, values, setFieldValue }) => (\n          <FormTeacher>\n            <TeacherAddTitle>Картка фахівця</TeacherAddTitle>\n            <FormImgContainer>\n              <UpdateAvatar\n                setValuesChildForm={setValuesChildForm}\n                setTeacherImage={setTeacherImage}\n                childImages={teacherImage}\n                fileName=\"teacherImage\"\n                setFieldValue={setFieldValue}\n              />\n              <NameFormTeacher>\n                <FieldTeacher name=\"name\" type=\"text\" placeholder=\"Ім'я\" />\n                {touched.name && errors.name && (\n                  <ErrorInfo>{errors.name}</ErrorInfo>\n                )}\n\n                <FieldTeacher\n                  name=\"surname\"\n                  type=\"text\"\n                  placeholder=\"Фамілія\"\n                />\n                {errors.surname && <ErrorInfo>{errors.surname}</ErrorInfo>}\n                <ColorWrapper>\n                  <TextAreaTitle>Колір для розкладу:</TextAreaTitle>\n                  <FieldColor\n                    name=\"color\"\n                    type=\"color\"\n                    value={color}\n                    onChange={event => {\n                      const selectedColor = event.target.value;\n                      setColor(selectedColor);\n                      setFieldValue('color', selectedColor);\n                    }}\n                  />\n                </ColorWrapper>\n              </NameFormTeacher>\n            </FormImgContainer>\n            <ContactContainer>\n              <ContactDescr>Телефон:</ContactDescr>\n              <FieldTeacherPhone\n                name=\"phone\"\n                type=\"tel\"\n                autoComplete=\"off\"\n                placeholder=\"+380(__)___ __ __\"\n              />\n            </ContactContainer>\n            <ContactContainer>\n              <ContactDescr>e-mail:</ContactDescr>\n              <FieldTeacherPhone\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                placeholder=\"example@example.com\"\n              />\n            </ContactContainer>\n            <SelectContainer>\n              <SelectDescr>Спеціалізація:</SelectDescr>\n              <Select\n                mode=\"multiple\"\n                style={{\n                  width: '100%',\n                  maxWidth: '400px',\n                  marginTop: '10px',\n                  border: '2px solid #68bf48',\n                  borderRadius: '8px',\n                }}\n                onChange={value => {\n                  const specialization = value;\n                  setFieldValue('specialization', specialization);\n                }}\n                options={options}\n              />\n            </SelectContainer>\n\n            <TextAreaTitle>Додаткова інформація:</TextAreaTitle>\n            <FieldTextarea name=\"about\" component=\"textarea\" rows={6} />\n            <FormButton type=\"submit\">Зберегти зміни</FormButton>\n          </FormTeacher>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default TeacherForm;\n","import TeacherForm from 'components/Teacher/TeacherForm/TeacherForm';\n\nconst TeacherPage = () => {\n  return (\n    <>\n      <TeacherForm />\n    </>\n  );\n};\n\nexport default TeacherPage;\n","import styled from 'styled-components';\nimport { BsFillFileEarmarkPersonFill } from 'react-icons/bs';\n\nexport const PreviewFotoContainer = styled.div`\n  width: 110px;\n  height: 110px;\n  background-color: #c0c0c0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n`;\nexport const UpdateFileButton = styled.button`\n  border-radius: 4px;\n  background-color: var(--main-dark-blue);\n  color: var(--header-main-color);\n  border-radius: 8px;\n  border: 1px solid transparent;\n  padding: 5px 10px;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  font-size: 13px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,\n    border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: var(--main-green);\n    border-color: var(--header-main-color);\n  }\n`;\nexport const FotoBlock = styled.div`\n  padding: 10px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const ImagePreview = styled.img`\n  display: block;\n  border-radius: 4px;\n`;\nexport const FotoIcon = styled(BsFillFileEarmarkPersonFill)`\n  width: 30px;\n  height: 30px;\n  fill: #808080;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n  FotoBlock,\n  FotoIcon,\n  ImagePreview,\n  PreviewFotoContainer,\n  UpdateFileButton,\n} from './UpdateAvatar.styled';\n\nfunction UpdateAvatar({ setFieldValue, avatar, fileName }) {\n  const fileRef = useRef(null);\n\n  const [preview, setPreview] = useState(avatar);\n  useEffect(() => {\n    setPreview(avatar);\n  }, [avatar]);\n  return (\n    <>\n      <input\n        type=\"file\"\n        hidden\n        ref={fileRef}\n        onChange={event => {\n          const selectedFile = event.target.files[0];\n          setFieldValue(`${fileName}`, selectedFile);\n          const reader = new FileReader();\n          reader.readAsDataURL(selectedFile);\n          reader.onload = () => {\n            setPreview(reader.result);\n          };\n        }}\n      />\n      <FotoBlock>\n        {preview ? (\n          <ImagePreview src={preview} alt=\"preview\" width={130} height={110} />\n        ) : (\n          <PreviewFotoContainer>\n            <FotoIcon />\n          </PreviewFotoContainer>\n        )}\n        <UpdateFileButton\n          type=\"button\"\n          onClick={() => {\n            fileRef.current.click();\n          }}\n        >\n          Додайте фото\n        </UpdateFileButton>\n      </FotoBlock>\n    </>\n  );\n}\n\nexport default UpdateAvatar;\n"],"names":["initialValuesTeacherForm","name","surname","teacherImage","phone","email","color","about","specialization","schemaTeacherUpdate","yup","shape","required","min","max","price","options","value","label","FormTeacher","styled","Form","_templateObject","_taggedTemplateLiteral","TeacherAddTitle","p","_templateObject2","FormImgContainer","div","_templateObject3","NameFormTeacher","_templateObject4","FieldTeacher","Field","_templateObject5","ErrorInfo","_templateObject6","TextAreaTitle","_templateObject7","ContactDescr","_templateObject8","ContactContainer","_templateObject9","SelectDescr","_templateObject10","SelectContainer","_templateObject11","FieldTextarea","_templateObject12","FormButton","button","_templateObject13","ColorWrapper","_templateObject14","FieldColor","_templateObject15","FieldTeacherPhone","_templateObject16","_templateObject17","_useState","useState","_useState2","_slicedToArray","valuesTeacherForm","setValuesChildForm","_useState3","_useState4","setTeacherImage","_useState5","_useState6","setColor","_jsx","_Fragment","children","Formik","enableReinitialize","initialValues","validationSchema","onSubmit","values","console","log","_ref","errors","touched","setFieldValue","_jsxs","UpdateAvatar","childImages","fileName","type","placeholder","onChange","event","selectedColor","target","autoComplete","Select","mode","style","width","maxWidth","marginTop","border","borderRadius","component","rows","TeacherForm","PreviewFotoContainer","UpdateFileButton","FotoBlock","ImagePreview","img","FotoIcon","BsFillFileEarmarkPersonFill","avatar","fileRef","useRef","preview","setPreview","useEffect","hidden","ref","selectedFile","files","concat","reader","FileReader","readAsDataURL","onload","result","src","alt","height","onClick","current","click"],"sourceRoot":""}