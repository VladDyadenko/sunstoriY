{"version":3,"file":"static/js/927.0912ad2e.chunk.js","mappings":"sPA2FA,UA7EA,WACE,IAAMA,GAAqBC,EAAAA,EAAAA,IAAYC,EAAAA,IAEvCC,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAA8BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA8BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA4Cb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAnDE,EAAiBD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,GAAWC,EAAAA,EAAAA,MA0CjB,OAxCAC,EAAAA,EAAAA,YAAU,WACR,IAEMC,EAAa,CAFKC,MAAQC,QAAQ,QAAQC,OAAO,cACjCF,MAAQG,MAAM,QAAQD,OAAO,eAG7CE,EAAY,IAAIC,KAAKN,EAAW,IAChCO,EAAU,IAAID,KAAKN,EAAW,IAC9BQ,GAAQC,EAAAA,EAAAA,GAASJ,EAAWE,GAC5BG,EAAoB,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOG,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAS,IAChDC,EAAgC,OAAZJ,QAAY,IAAZA,OAAY,EAAZA,EAAcC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAS,IAClEjB,EAAekB,GACXA,EAAkBC,OAAS,GAC7BlB,GAASmB,EAAAA,EAAAA,IAAkBF,GAE/B,GAAG,CAACjB,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAMkB,EAAiBC,MAAMC,KAC3B,IAAIC,IACgB,OAAlB5C,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBmC,KAClB,SAAAU,GAAM,SAAAC,OAAOD,EAAOE,YAAW,KAAAD,OAAID,EAAOG,eAAc,MAI9DxC,EAAYiC,EACd,GAAG,CAACzC,KAEJuB,EAAAA,EAAAA,YAAU,WACR,GAAIvB,GAAsBW,GAAWA,EAAQ4B,OAAS,EAAG,CACvD,IAAMU,EAAoC,OAAlBjD,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBkD,QAAO,SAAAL,GACjD,IAAMM,EAAe,GAAAL,OAAMD,EAAOE,YAAW,KAAAD,OAAID,EAAOG,gBACxD,OAAOrC,EAAQyC,SAASD,EAC1B,IAEAnC,EAAWiC,EACb,MACEjC,EAAWhB,EAEf,GAAG,CAACA,EAAoBW,KAGtB0C,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAAAF,SAAA,EACRF,EAAAA,EAAAA,KAACK,EAAAA,EAAY,CACXnD,SAAUA,EACVI,QAASA,EACTC,WAAYA,EACZO,kBAAmBA,EACnBC,eAAgBA,EAChBuC,gBAAiB,SAAA5C,GAAO,OAAIM,GAASmB,EAAAA,EAAAA,IAAkBzB,GAAS,KAElEsC,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAAAL,UACF,OAAPxC,QAAO,IAAPA,OAAO,EAAPA,EAASwB,QAAS,IACjBc,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACR9C,QAASA,EACT+C,gBAAiB,SAAAjB,GACf,OAAOxB,GAAS0C,EAAAA,EAAAA,IAA2BlB,EAAOmB,KACpD,EACAC,OAAO,6EAOrB,C","sources":["page/CorrectionPage/CorrectionPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport Container from '../../components/Container/Container';\nimport { getDates } from 'components/FilterLesson/SelectDate/GetDateFunction';\nimport FilterLesson from 'components/FilterLesson/FilterLesson';\nimport { MainWrapper } from 'components/ContainerMain/ContainerMain.styled';\nimport MainTable from 'ui/MainTable/MainTable';\nimport { selectLessonsСorrection } from 'redux/offices/officesSelector';\nimport {\n  correctionLessons,\n  deleteСorrectionLessonById,\n} from 'redux/offices/officesOperetion';\n\nfunction CorrectionPage() {\n  const lessonsChosePeriod = useSelector(selectLessonsСorrection);\n\n  const [teachers, setTeachers] = useState(null);\n  const [teacher, setTeacher] = useState([]);\n  const [lessons, setLessons] = useState(null);\n  const [dateCurrentLesson, setLessonDates] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const startDateFormat = dayjs().startOf('week').format('YYYY-MM-DD');\n    const endDateFormat = dayjs().endOf('week').format('YYYY-MM-DD');\n    const dateString = [startDateFormat, endDateFormat];\n\n    const startDate = new Date(dateString[0]);\n    const endDate = new Date(dateString[1]);\n    const dates = getDates(startDate, endDate);\n    const initialDates = dates?.map(date => date.valueOf());\n    const initialDateValues = initialDates?.map(date => date.valueOf());\n    setLessonDates(initialDateValues);\n    if (initialDateValues.length > 0) {\n      dispatch(correctionLessons(initialDateValues));\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    const uniqueTeachers = Array.from(\n      new Set(\n        lessonsChosePeriod?.map(\n          lesson => `${lesson.teacherName} ${lesson.teacherSurname}`\n        )\n      )\n    );\n    setTeachers(uniqueTeachers);\n  }, [lessonsChosePeriod]);\n\n  useEffect(() => {\n    if (lessonsChosePeriod && teacher && teacher.length > 0) {\n      const filteredLessons = lessonsChosePeriod?.filter(lesson => {\n        const teacherFullName = `${lesson.teacherName} ${lesson.teacherSurname}`;\n        return teacher.includes(teacherFullName);\n      });\n\n      setLessons(filteredLessons);\n    } else {\n      setLessons(lessonsChosePeriod);\n    }\n  }, [lessonsChosePeriod, teacher]);\n\n  return (\n    <>\n      <Container>\n        <FilterLesson\n          teachers={teachers}\n          teacher={teacher}\n          setTeacher={setTeacher}\n          dateCurrentLesson={dateCurrentLesson}\n          setLessonDates={setLessonDates}\n          onLessonsChange={lessons => dispatch(correctionLessons(lessons))}\n        />\n        <MainWrapper>\n          {lessons?.length > 0 && (\n            <MainTable\n              lessons={lessons}\n              onLessonsDelete={lesson => {\n                return dispatch(deleteСorrectionLessonById(lesson._id));\n              }}\n              office=\"Корекційний\"\n            />\n          )}\n        </MainWrapper>\n      </Container>\n    </>\n  );\n}\n\nexport default CorrectionPage;\n"],"names":["lessonsChosePeriod","useSelector","selectLessonsСorrection","_useState","useState","_useState2","_slicedToArray","teachers","setTeachers","_useState3","_useState4","teacher","setTeacher","_useState5","_useState6","lessons","setLessons","_useState7","_useState8","dateCurrentLesson","setLessonDates","dispatch","useDispatch","useEffect","dateString","dayjs","startOf","format","endOf","startDate","Date","endDate","dates","getDates","initialDates","map","date","valueOf","initialDateValues","length","correctionLessons","uniqueTeachers","Array","from","Set","lesson","concat","teacherName","teacherSurname","filteredLessons","filter","teacherFullName","includes","_jsx","_Fragment","children","_jsxs","Container","FilterLesson","onLessonsChange","MainWrapper","MainTable","onLessonsDelete","deleteСorrectionLessonById","_id","office"],"sourceRoot":""}