{"version":3,"file":"static/js/364.82abee1e.chunk.js","mappings":"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","sources":["components/Container/Container.style.js","components/Container/Container.jsx","redux/child/api.js","components/Children/ChildrenList/ChildrenList.styled.js","components/Children/ChildrenCard/ChildrenCard.styled.js","components/Children/ChildrenCard/ChildrenCard.jsx","components/Children/ChildrenList/ChildrenList.jsx","page/ChildrenPage/ChildrenPage.styled.js","page/ChildrenPage/ChildrenPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst ContainerMedia = styled.div`\n  background-color: transparent;\n\n  margin: 0 auto;\n  padding: 0 15px;\n  width: var(--small-screen);\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n  @media (min-width: 1280px) {\n    width: 1280px;\n  }\n  @media (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n\nexport default ContainerMedia;\n","import ContainerMedia from './Container.style';\n\nconst Container = ({ children }) => {\n  return (\n    <>\n      <ContainerMedia>{children}</ContainerMedia>\n    </>\n  );\n};\n\nexport default Container;\n","import axios from 'axios';\n\nexport const getAllChild = async () => {\n  try {\n    const { data } = await axios.get('/child');\n    return data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n","import styled from 'styled-components';\n\nexport const ChildrenListWrapper = styled.div`\n  width: 100%;\n  padding: 15px 0;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: start;\n  justify-content: center;\n  gap: 30px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ChildrenCardWrapper = styled.div`\n  width: 250px;\n  height: 300px;\n  padding: 15px 10px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2),\n    0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImedgeContainer = styled.div`\n  width: 100%;\n`;\nexport const ImedgeChild = styled.img`\n  width: 100%;\n  display: block;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\nexport const TitleContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  flex: 1;\n  margin-bottom: 15px;\n`;\nexport const TitleCard = styled.h4`\n  text-align: center;\n  color: var(--main-green);\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n`;\n\nexport const ButtonCard = styled(NavLink)`\n  width: 70%;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  border-radius: 8px;\n  color: var(--main-dark-blue);\n  background: var(--header-main-color);\n  border: 1px solid var(--main-dark-blue);\n\n  cursor: pointer;\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\n  &:hover {\n    background: var(--main-dark-blue);\n    color: var(--header-main-color);\n    border: 1px solid transparent;\n  }\n`;\n","import {\n  ButtonCard,\n  ChildrenCardWrapper,\n  ImedgeChild,\n  ImedgeContainer,\n  TitleCard,\n  TitleContainer,\n} from './ChildrenCard.styled';\n\nimport defaultImg from 'assets/images/Children/childrenPage_2.png';\n\nfunction ChildrenCard({ child }) {\n  const { childImage, name, surname, _id } = child;\n  console.log(child);\n  return (\n    <>\n      <ChildrenCardWrapper>\n        <ImedgeContainer>\n          <ImedgeChild\n            src={childImage ? childImage : defaultImg}\n            alt=\"children\"\n            width={230}\n            height={180}\n          />\n        </ImedgeContainer>\n        <TitleContainer>\n          <TitleCard>{name}</TitleCard>\n          <TitleCard>{surname}</TitleCard>\n        </TitleContainer>\n        <ButtonCard to={`/child/${_id}`}>Переглянути</ButtonCard>\n      </ChildrenCardWrapper>\n    </>\n  );\n}\n\nexport default ChildrenCard;\n","import React from 'react';\nimport { ChildrenListWrapper } from './ChildrenList.styled';\nimport ChildrenCard from '../ChildrenCard/ChildrenCard';\n\nfunction ChildrenList({ allChildren }) {\n  console.log(allChildren);\n\n  return (\n    <ChildrenListWrapper>\n      {allChildren?.map(child => {\n        return <ChildrenCard key={child._id} child={child} />;\n      })}\n    </ChildrenListWrapper>\n  );\n}\n\nexport default ChildrenList;\n","import styled from 'styled-components';\n\nexport const ChildrenTitle = styled.h3`\n  width: 100%;\n  color: var(--main-green);\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 28px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { getAllChild } from 'redux/child/api';\nimport { Notify } from 'notiflix';\n\nimport ChildrenList from 'components/Children/ChildrenList/ChildrenList';\nimport Container from '../../components/Container/Container';\nimport { ChildrenTitle } from './ChildrenPage.styled';\n\nfunction ChildrenPage() {\n  const [allChildren, setAllChildren] = useState();\n  console.log(allChildren);\n\n  useEffect(() => {\n    async function fetchChildren() {\n      try {\n        const data = await getAllChild();\n\n        if (!data) {\n          return;\n        }\n        setAllChildren(data);\n      } catch (error) {\n        Notify.failure('Children not found!');\n      }\n    }\n    fetchChildren();\n  }, []);\n  return (\n    <>\n      <Container>\n        <ChildrenTitle>Наші мрійникі та фантазери</ChildrenTitle>\n        <ChildrenList allChildren={allChildren} />\n      </Container>\n    </>\n  );\n}\n\nexport default ChildrenPage;\n"],"names":["styled","div","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","_Fragment","ContainerMedia","getAllChild","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","sent","abrupt","t0","console","log","message","stop","apply","arguments","ChildrenListWrapper","ChildrenCardWrapper","ImedgeContainer","_templateObject2","ImedgeChild","img","_templateObject3","TitleContainer","_templateObject4","TitleCard","h4","_templateObject5","ButtonCard","NavLink","_templateObject6","child","childImage","name","surname","_id","_jsxs","src","defaultImg","alt","width","height","to","concat","allChildren","map","ChildrenCard","ChildrenTitle","h3","_useState","useState","_useState2","_slicedToArray","setAllChildren","useEffect","_fetchChildren","Notify","failure","fetchChildren","Container","ChildrenList"],"sourceRoot":""}